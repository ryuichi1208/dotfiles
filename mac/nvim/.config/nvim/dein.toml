#----------------------------------------------------------
# Plugin manager
#----------------------------------------------------------
[[plugins]]
repo = 'Shougo/dein.vim'


#----------------------------------------------------------
# Theme
#----------------------------------------------------------
[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'joshdick/onedark.vim'

[[plugins]]
repo = 'jacoborus/tender.vim'

[[plugins]]
repo = 'altercation/solarized'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'ayu-theme/ayu-vim'
hook_add = '''
let ayucolor="dark"
'''

#----------------------------------------------------------
# Git
#----------------------------------------------------------
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_override_sign_column_highlight = 0
highlight GitGutterAdd ctermfg=blue ctermbg=brown
'''

[[plugins]]
repo = 'tpope/vim-fugitive'


#----------------------------------------------------------
# 補完
#----------------------------------------------------------
[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'alvan/vim-closetag'
hook_add = '''
let g:closetag_filenames = '*.html,*.vue'
'''

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'mattn/sonictemplate-vim'
hook_add = '''
let g:sonictemplate_vim_template_dir = [ '~/.config/nvim/plugins' ]
'''

[[plugins]]
repo = 'fatih/vim-go'
hook_add = '''
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_fmt_command = "goimports"
let g:go_def_mapping_enabled = 0
let g:go_doc_keywordprg_enabled = 0

autocmd FileType go :highlight goErr cterm=bold ctermfg=214
autocmd FileType go :match goErr /\<err\>/
'''

[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsEditSplit="vertical"
'''

#[[plugins]]
#repo = 'ervandew/supertab'


#----------------------------------------------------------
# ステータスライン
#----------------------------------------------------------
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
        \ 'colorscheme': 'jellybeans',
        \ 'mode_map': {'c': 'NORMAL'},
        \ 'active': {
        \   'left': [ [ 'mode', 'paste' ],
        \           [ 'gitbranch', 'absolutepath', 'modified', 'readonly' ] ]
        \ },
        \ 'component_function': {
        \   'gitbranch': 'fugitive#head',
        \   'filename': 'LightlineFilename',
        \ }
        \ }
'''


[[plugins]]
repo = 'osyo-manga/vim-anzu'


#----------------------------------------------------------
# Document
#----------------------------------------------------------
[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_add = '''
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_auto_insert_bullets = 0
let g:vim_markdown_new_list_item_indent = 0
let g:cheatsheet#cheat_file = '~/.config/nvim/plugins/.cheatsheet.md'
'''

[[plugins]]
repo = 'vim-jp/vimdoc-ja'


#----------------------------------------------------------
# Markdown
#----------------------------------------------------------
[[plugins]]
repo = 'iamcco/markdown-preview.vim'


#----------------------------------------------------------
# lint/prettier
#----------------------------------------------------------
# repo = 'w0rp/ale'
# hook_add = '''
# let g:ale_lint_on_save = 1
# let g:ale_lint_on_text_changed = 0
# let g:ale_sign_column_always = 1
# let g:ale_sign_error = '!!'
# let g:ale_sign_warning = '=='
# '''

[[plugins]]
repo = 'prettier/vim-prettier'
build = 'npm install'
on_ft    = ['javascript', 'typescript', 'vue', 'css', 'scss', 'json', 'markdown', 'python']

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'pearofducks/ansible-vim'

#[[plugins]]
#repo = 'davidhalter/jedi-vim'

[[plugins]]
repo = 'chr4/nginx.vim'

#----------------------------------------------------------
# LSP
#----------------------------------------------------------
[[plugins]]
repo = 'neoclide/coc.nvim'
build = './install.sh nightly'

[[plugins]]
repo = 'derekwyatt/vim-scala'

[[plugins]]
repo = 'antoinemadec/coc-fzf'

[[plugins]]
repo = 'ryuta69/coc-perl'
hook_add = '''
let g:coc_global_extensions = [
      \ 'coc-perl',
\ ]
'''


#----------------------------------------------------------
# fzf
#----------------------------------------------------------
[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
set rtp+=/usr/local/opt/fzf
" dotファイルを含める&プレビュー
command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview({'source': 'ag --hidden --ignore .git -g ""'}), <bang>0)
command! -bang -nargs=* Ag
  \ call fzf#vim#grep(
  \   'ag --column --color --hidden --ignore .git '.shellescape(<q-args>), 0,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%', '?'),
  \   <bang>0)
'''

#----------------------------------------------------------
# Editor
#----------------------------------------------------------
[[plugins]]
repo = 'machakann/vim-swap'

[[plugins]]
repo = 'machakann/vim-sandwich'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-surround'


#----------------------------------------------------------
# Other
#----------------------------------------------------------
[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {
\	'*': { 'split': '' },
\       'python': { 'command': 'python3' },
\ }
let g:quickrun_config._ = {
\   'outputter/buffer/split': '10'
\ }
'''


[[plugins]]
repo = 'rhysd/vim-clang-format'
hook_add = '''
let g:clang_format#style_options = {
            \ "AccessModifierOffset" : -4,
            \ "AllowShortIfStatementsOnASingleLine" : "true",
            \ "AlwaysBreakTemplateDeclarations" : "true",
            \ "Standard" : "C++11"}
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'rking/ag.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
let g:indentLine_enabled = 0
let g:indentLine_setColors = 1
let g:indentLine_color_term = 111

'''
